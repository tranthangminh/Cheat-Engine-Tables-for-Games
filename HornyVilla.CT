<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="46">
  <CheatEntries>
    <CheatEntry>
      <ID>20</ID>
      <Description>"Do Everything"</Description>
      <Options moAlwaysHideChildren="1" moManualExpandCollapse="1" moAllowManualCollapseAndExpand="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>BF4040</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>7</ID>
          <Description>"pointerscan result"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>BF4040</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>"UnityPlayer.dll"+01CC8090</Address>
          <Offsets>
            <Offset>635</Offset>
            <Offset>630</Offset>
            <Offset>50</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>8</ID>
          <Description>"pointerscan result"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>BF4040</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>"UnityPlayer.dll"+01CC8090</Address>
          <Offsets>
            <Offset>635</Offset>
            <Offset>630</Offset>
            <Offset>20</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>9</ID>
          <Description>"pointerscan result"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>BF4040</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>"UnityPlayer.dll"+01CC80B0</Address>
          <Offsets>
            <Offset>635</Offset>
            <Offset>630</Offset>
            <Offset>40</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>10</ID>
          <Description>"pointerscan result"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>BF4040</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>"mono-2.0-bdwgc.dll"+007D2720</Address>
          <Offsets>
            <Offset>635</Offset>
            <Offset>630</Offset>
            <Offset>60</Offset>
            <Offset>1F0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"pointerscan result"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>BF4040</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>"mono-2.0-bdwgc.dll"+007D2720</Address>
          <Offsets>
            <Offset>635</Offset>
            <Offset>630</Offset>
            <Offset>60</Offset>
            <Offset>D0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>12</ID>
          <Description>"pointerscan result"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>BF4040</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>"mono-2.0-bdwgc.dll"+007D2720</Address>
          <Offsets>
            <Offset>635</Offset>
            <Offset>630</Offset>
            <Offset>0</Offset>
            <Offset>220</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>13</ID>
          <Description>"pointerscan result"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>BF4040</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>"mono-2.0-bdwgc.dll"+00912700</Address>
          <Offsets>
            <Offset>635</Offset>
            <Offset>630</Offset>
            <Offset>0</Offset>
            <Offset>220</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>14</ID>
          <Description>"pointerscan result"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>BF4040</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>"mono-2.0-bdwgc.dll"+00912700</Address>
          <Offsets>
            <Offset>635</Offset>
            <Offset>630</Offset>
            <Offset>60</Offset>
            <Offset>D0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>15</ID>
          <Description>"pointerscan result"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>BF4040</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>"mono-2.0-bdwgc.dll"+00912700</Address>
          <Offsets>
            <Offset>635</Offset>
            <Offset>630</Offset>
            <Offset>60</Offset>
            <Offset>1F0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>16</ID>
          <Description>"pointerscan result"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>BF4040</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>"mono-2.0-bdwgc.dll"+007D2720</Address>
          <Offsets>
            <Offset>635</Offset>
            <Offset>630</Offset>
            <Offset>0</Offset>
            <Offset>1C0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>17</ID>
          <Description>"pointerscan result"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>BF4040</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>"mono-2.0-bdwgc.dll"+00912700</Address>
          <Offsets>
            <Offset>635</Offset>
            <Offset>630</Offset>
            <Offset>0</Offset>
            <Offset>1C0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>18</ID>
          <Description>"pointerscan result"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>BF4040</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>"mono-2.0-bdwgc.dll"+007D2720</Address>
          <Offsets>
            <Offset>635</Offset>
            <Offset>630</Offset>
            <Offset>0</Offset>
            <Offset>3B8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>19</ID>
          <Description>"pointerscan result"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <Color>BF4040</Color>
          <VariableType>4 Bytes</VariableType>
          <Address>"mono-2.0-bdwgc.dll"+00912700</Address>
          <Offsets>
            <Offset>635</Offset>
            <Offset>630</Offset>
            <Offset>0</Offset>
            <Offset>3B8</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>37</ID>
      <Description>"BE CAREFUL WHEN USING! An item might get stuck at 0 items left, and that item will never disappear"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>34</ID>
          <Description>"Items left = 0"</Description>
          <LastState/>
          <Color>40BF40</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : HornyVilla
  Version: 
  Date   : 2025-08-21
  Author : Max

  This script does blah blah blah
}

[ENABLE]

aobscan(INJECT,89 51 28 48 8B 4D E0) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  mov [rcx+28],0
  //mov [rcx+28],edx
  mov rcx,[rbp-20]
  jmp return

INJECT:
  jmp newmem
  nop 2
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 89 51 28 48 8B 4D E0

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 14302CCB44C

14302CCB420: 0F 84 47 00 00 00              - je 14302CCB46D
14302CCB426: 48 83 C2 20                    - add rdx,20
14302CCB42A: 48 8D 6D 00                    - lea rbp,[rbp+00]
14302CCB42E: 49 BB 30 89 CC 02 43 01 00 00  - mov r11,0000014302CC8930
14302CCB438: 41 FF D3                       - call r11
14302CCB43B: 48 8B 45 D8                    - mov rax,[rbp-28]
14302CCB43F: 48 8B 4D E0                    - mov rcx,[rbp-20]
14302CCB443: 48 8B D1                       - mov rdx,rcx
14302CCB446: 48 63 52 28                    - movsxd  rdx,dword ptr [rdx+28]
14302CCB44A: FF CA                          - dec edx
// ---------- INJECTING HERE ----------
14302CCB44C: 89 51 28                       - mov [rcx+28],edx
// ---------- DONE INJECTING  ----------
14302CCB44F: 48 8B 4D E0                    - mov rcx,[rbp-20]
14302CCB453: 48 8B D1                       - mov rdx,rcx
14302CCB456: 48 63 52 2C                    - movsxd  rdx,dword ptr [rdx+2C]
14302CCB45A: FF C2                          - inc edx
14302CCB45C: 89 51 2C                       - mov [rcx+2C],edx
14302CCB45F: 48 8B 7D F0                    - mov rdi,[rbp-10]
14302CCB463: 4C 8B 7D F8                    - mov r15,[rbp-08]
14302CCB467: 48 8D 65 00                    - lea rsp,[rbp+00]
14302CCB46B: 5D                             - pop rbp
14302CCB46C: C3                             - ret 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>36</ID>
          <Description>"Items left = 0 - Piggy bank/Energy/Chests"</Description>
          <LastState/>
          <Color>40BF40</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : HornyVilla
  Version: 
  Date   : 2025-08-21
  Author : Max

  This script does blah blah blah
}

[ENABLE]

aobscan(INJECT,89 77 3C 85 F6) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  mov [rdi+3C],0
  //mov [rdi+3C],esi
  test esi,esi
  jmp return

INJECT:
  jmp newmem
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 89 77 3C 85 F6

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 145E389A0C6

145E389A0AA: 00 00        - add [rax],al
145E389A0AC: 00 00        - add [rax],al
145E389A0AE: 00 00        - add [rax],al
145E389A0B0: 55           - push rbp
145E389A0B1: 48 8B EC     - mov rbp,rsp
145E389A0B4: 48 83 EC 30  - sub rsp,30
145E389A0B8: 48 89 75 F0  - mov [rbp-10],rsi
145E389A0BC: 48 89 7D F8  - mov [rbp-08],rdi
145E389A0C0: 48 8B F9     - mov rdi,rcx
145E389A0C3: 48 8B F2     - mov rsi,rdx
// ---------- INJECTING HERE ----------
145E389A0C6: 89 77 3C     - mov [rdi+3C],esi
// ---------- DONE INJECTING  ----------
145E389A0C9: 85 F6        - test esi,esi
145E389A0CB: 75 17        - jne 145E389A0E4
145E389A0CD: 48 8B 47 10  - mov rax,[rdi+10]
145E389A0D1: 48 8B C8     - mov rcx,rax
145E389A0D4: 48 8B F9     - mov rdi,rcx
145E389A0D7: 48 85 C0     - test rax,rax
145E389A0DA: 75 02        - jne 145E389A0DE
145E389A0DC: EB 06        - jmp 145E389A0E4
145E389A0DE: 48 8B CF     - mov rcx,rdi
145E389A0E1: FF 57 18     - call qword ptr [rdi+18]
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>35</ID>
      <Description>"Items left = 2 - Piggy bank/Energy/Chests"</Description>
      <LastState/>
      <Color>40BF40</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : HornyVilla
  Version: 
  Date   : 2025-08-21
  Author : Max

  This script does blah blah blah
}

[ENABLE]

aobscan(INJECT,89 77 3C 85 F6) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:

code:
  mov [rdi+3C],2
  //mov [rdi+3C],esi
  test esi,esi
  jmp return

INJECT:
  jmp newmem
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 89 77 3C 85 F6

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 145E389A0C6

145E389A0AA: 00 00        - add [rax],al
145E389A0AC: 00 00        - add [rax],al
145E389A0AE: 00 00        - add [rax],al
145E389A0B0: 55           - push rbp
145E389A0B1: 48 8B EC     - mov rbp,rsp
145E389A0B4: 48 83 EC 30  - sub rsp,30
145E389A0B8: 48 89 75 F0  - mov [rbp-10],rsi
145E389A0BC: 48 89 7D F8  - mov [rbp-08],rdi
145E389A0C0: 48 8B F9     - mov rdi,rcx
145E389A0C3: 48 8B F2     - mov rsi,rdx
// ---------- INJECTING HERE ----------
145E389A0C6: 89 77 3C     - mov [rdi+3C],esi
// ---------- DONE INJECTING  ----------
145E389A0C9: 85 F6        - test esi,esi
145E389A0CB: 75 17        - jne 145E389A0E4
145E389A0CD: 48 8B 47 10  - mov rax,[rdi+10]
145E389A0D1: 48 8B C8     - mov rcx,rax
145E389A0D4: 48 8B F9     - mov rdi,rcx
145E389A0D7: 48 85 C0     - test rax,rax
145E389A0DA: 75 02        - jne 145E389A0DE
145E389A0DC: EB 06        - jmp 145E389A0E4
145E389A0DE: 48 8B CF     - mov rcx,rdi
145E389A0E1: FF 57 18     - call qword ptr [rdi+18]
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Change of mov [rsp+08],rbx</Description>
      <AddressString>UnityPlayer.dll+787D40</AddressString>
      <Before>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
      </Before>
      <Actual>
        <Byte>CC</Byte>
        <Byte>89</Byte>
        <Byte>5C</Byte>
        <Byte>24</Byte>
        <Byte>08</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>89</Byte>
        <Byte>6C</Byte>
        <Byte>24</Byte>
        <Byte>10</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov rax,rsp</Description>
      <AddressString>UnityPlayer.dll+D48870</AddressString>
      <Before>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
        <Byte>CC</Byte>
      </Before>
      <Actual>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>C4</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>89</Byte>
        <Byte>58</Byte>
        <Byte>10</Byte>
        <Byte>48</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rdi+20],eax</Description>
      <AddressString>217A8AD7235</AddressString>
      <Before>
        <Byte>48</Byte>
        <Byte>63</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>08</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>47</Byte>
        <Byte>20</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>3C</Byte>
        <Byte>24</Byte>
        <Byte>48</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rdi+30],esi</Description>
      <AddressString>21C26F160FD</AddressString>
      <Before>
        <Byte>C0</Byte>
        <Byte>48</Byte>
        <Byte>0F</Byte>
        <Byte>B6</Byte>
        <Byte>C0</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>77</Byte>
        <Byte>30</Byte>
      </Actual>
      <After>
        <Byte>85</Byte>
        <Byte>C0</Byte>
        <Byte>74</Byte>
        <Byte>17</Byte>
        <Byte>48</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rdi+20],eax</Description>
      <AddressString>21B9A617235</AddressString>
      <Before>
        <Byte>48</Byte>
        <Byte>63</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>08</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>47</Byte>
        <Byte>20</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>3C</Byte>
        <Byte>24</Byte>
        <Byte>48</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of or [rcx-74B7DFB9],cl</Description>
      <AddressString>21B9A617234</AddressString>
      <Before>
        <Byte>08</Byte>
        <Byte>48</Byte>
        <Byte>63</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
      </Before>
      <Actual>
        <Byte>08</Byte>
        <Byte>89</Byte>
        <Byte>47</Byte>
        <Byte>20</Byte>
        <Byte>48</Byte>
        <Byte>8B</Byte>
      </Actual>
      <After>
        <Byte>3C</Byte>
        <Byte>24</Byte>
        <Byte>48</Byte>
        <Byte>83</Byte>
        <Byte>C4</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov bl,46</Description>
      <AddressString>20B266BB8F0</AddressString>
      <Before>
        <Byte>88</Byte>
        <Byte>0B</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>B3</Byte>
        <Byte>46</Byte>
      </Actual>
      <After>
        <Byte>89</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov [rdi+20],eax</Description>
      <AddressString>1DC1EF9A575</AddressString>
      <Before>
        <Byte>48</Byte>
        <Byte>63</Byte>
        <Byte>44</Byte>
        <Byte>24</Byte>
        <Byte>08</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>47</Byte>
        <Byte>20</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>3C</Byte>
        <Byte>24</Byte>
        <Byte>48</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>speedhack_wantedspeed</Name>
      <Address>1E46B220000</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
</CheatTable>
